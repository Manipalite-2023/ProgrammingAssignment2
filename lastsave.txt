> makeCacheMatrix <- function(x = matrix()) {
+     i <- NULL
+   set <- function(y) {
+           x <<- y
+           i <<- NULL
+   }
+   get <- function() x
+   setinverse <- function(inverse) i <<- inverse
+   getinverse <- function() i
+   list(set = set,
+        get = get,
+        setinverse = setinverse,
+        getinverse = getinverse)
+ }
> cacheSolve <- function(x, ...) {
+   i <- x$getinverse()
+   if (!is.null(i)) {
+           message("getting cached data")
+           return(i)
+   }
+   data <- x$get()
+   i <- solve(data, ...)
+   x$setinverse(i)
+   i
+ }
> B <- matrix(c(1,2,3,4),2,2)
> B1 <- makwCacheMatrix(B)
Error in makwCacheMatrix(B) : could not find function "makwCacheMatrix"
> B1 <- makeCacheMatrix(B)
> B
     [,1] [,2]
[1,]    1    3
[2,]    2    4
> B1
$set
function(y) {
          x <<- y
          i <<- NULL
  }
<environment: 0x00000152652375f0>

$get
function() x
<environment: 0x00000152652375f0>

$setinverse
function(inverse) i <<- inverse
<environment: 0x00000152652375f0>

$getinverse
function() i
<environment: 0x00000152652375f0>

> cacheSolve(B1)
     [,1] [,2]
[1,]   -2  1.5
[2,]    1 -0.5
> cacheSolve(B)
Error in x$getinverse : $ operator is invalid for atomic vectors
> 
